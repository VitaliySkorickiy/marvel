{"version":3,"sources":["components/appHeader/AppHeader.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/pages/404.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","services/MarvelService.js","hooks/http.hook.js","components/spinner/Spinner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","exact","activeStyle","ErrorMessage","src","img","style","display","width","height","objectFit","margin","alt","Page404","AppBanner","avengers","avengersLogo","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiKey","_apiBase","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","hompage","urls","wiki","comics","items","getAllComics","_transformComics","getComic","title","pageCount","language","textObjects","price","prices","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ComicsList","comList","setComList","newComLoading","setNewComLoading","setOffset","comEnded","setComEnded","useEffect","onRequest","initial","then","onComListLoaded","newComList","ended","lenght","charList","arr","item","i","renderItems","errorMessage","spinner","disabled","onClick","ComicsPage","View","objFit","indexOf","href","RandomChar","setChar","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","content","mjolnir","CharList","props","setCharList","newItemLoading","setNewItemLoading","charEnded","setCharEnded","onCharListLoaded","newCharList","itemRefs","useRef","focusOnItem","current","forEach","classList","remove","add","focus","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","Skeleton","length","slice","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6957aea0.chunk.js","sourcesContent":["import { Link, NavLink } from 'react-router-dom';\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to='/'>\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink exact to='/' activeStyle={{ 'color': '#9f0013' }}>Characters</NavLink></li>\n                    /\n                    <li><NavLink to='/comics' activeStyle={{ 'color': '#9f0013' }}>Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    // <img src={process.env.PUBLIC_URL + '/error.gif'} />\r\n    <img src={img} style={{ display: 'block', width: '25opx', height: '250px', objectFit: 'contain', margin: '0 auto' }} alt='Error' />\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div>\r\n      <ErrorMessage />\r\n\r\n      <p style={{ 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px' }}>\r\n        Page doesn't exist\r\n      </p>\r\n      <Link style={{ 'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px' }} to=\"/\">\r\n        Back to main page\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page404;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiKey = 'apikey=7c52ba72a4a8f2e4d87fabbfc89486b2';\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _baseOffset = 192;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n      hompage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items\r\n    }\r\n  }\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  }\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  }\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n    }\r\n  }\r\n\r\n  return { loading, error, clearError, getCharacter, getAllCharacters, getAllComics, getComic }\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n    // начало загрузки\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(url, { method, body, headers });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setLoading(false);\r\n      return data;\r\n\r\n    } catch (e) {\r\n      setLoading(false);\r\n      setError(e.message);\r\n      throw e;\r\n    }\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError }\r\n}","const Spinner = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n      <g transform=\"translate(80,50)\">\r\n        <g transform=\"rotate(0)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n        <g transform=\"rotate(45)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g><g transform=\"translate(50,80)\">\r\n        <g transform=\"rotate(90)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n        <g transform=\"rotate(135)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g><g transform=\"translate(20,50.00000000000001)\">\r\n        <g transform=\"rotate(180)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n        <g transform=\"rotate(225)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g><g transform=\"translate(49.99999999999999,20)\">\r\n        <g transform=\"rotate(270)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n        <g transform=\"rotate(315)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comList, setComList] = useState([]);\n    const [newComLoading, setNewComLoading] = useState(false);\n    const [offset, setOffset] = useState(192);\n    const [comEnded, setComEnded] = useState(false);\n\n    const { loading, error, getAllComics } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true)\n    }, [])\n\n    const onRequest = (offset, initial) => {\n\n        initial ? setNewComLoading(false) : setNewComLoading(true);\n\n        getAllComics(offset)\n            .then(onComListLoaded)\n    }\n\n    const onComListLoaded = (newComList) => {\n\n        let ended = false;\n\n        if (newComList.lenght < 8) {\n            ended = true;\n        }\n\n        setComList(charList => [...charList, ...newComList]);\n        setNewComLoading(false);\n        setOffset(offset + 8);\n        setComEnded(ended);\n    }\n\n    const renderItems = (arr) => {\n\n        const items = arr.map((item, i) => {\n\n            return (\n                <>\n                    <li className=\"comics__item\" key={i}>\n                        <Link to={`/comics/${item.id}`}>\n                            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                            <div className=\"comics__item-name\">\n                                {item.title}\n                            </div>\n                            <div className=\"comics__item-price\">\n                                {item.price}\n                            </div>\n                        </Link>\n                    </li>\n                </>\n            )\n        });\n        // эта конструкция для центровки спиннера / ошибки\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newComLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newComLoading}\n                style={{ 'display': comEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError()\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\" >\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Случайный персонаж на сегодня!\n                    Вы хотите узнать его получше?\n                </p>\n                <p className=\"randomchar__title\">\n                    Или выберите другой\n                </p>\n                <button\n                    className=\"button button__main\"\n                    onClick={updateChar}\n                >\n                    <div className=\"inner\">обновить</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n            </div>\n        </div>\n    )\n\n}\n\nconst View = ({ char }) => {\n\n    const { name, description, thumbnail, hompage, wiki } = char;\n\n    let objFit = null;\n\n    if (thumbnail.indexOf('image_not_available.jpg') > 0) {\n        objFit = { objectFit: \"contain\" };\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={objFit} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description || 'no data =('}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={hompage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types'\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(192); /* смещение по списку */\n    const [charEnded, setCharEnded] = useState(false); /* последний элемент, скрытие кнопки */\n\n    const { loading, error, getAllCharacters } = useMarvelService();\n\n\n    useEffect(() => {\n        onRequest(offset, true)\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n\n        let ended = false;\n\n        if (newCharList.lenght < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 9);\n        setCharEnded(ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n\n        const items = arr.map((item, i) => {\n\n            let imgStyle = { 'objectFit': 'cover' };\n\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}\n                >\n                    <img\n                        src={item.thumbnail}\n                        alt={item.name}\n                        style={imgStyle}\n                    />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // эта конструкция для центровки спиннера / ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{ 'display': charEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'\n\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        const { charId } = props;\n\n        if (!charId) {\n            return\n        }\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton />;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n\n}\n\nconst View = ({ char }) => {\n\n    const { description, thumbnail, hompage, wiki, comics } = char;\n\n    let objFit = null;\n\n    if (thumbnail.indexOf('image_not_available.jpg') > 0) {\n        objFit = { objectFit: \"contain\" };\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={'name'} style={objFit} />\n                <div>\n                    <div className=\"char__info-name\">{'name'}</div>\n                    <div className=\"char__btns\">\n                        <a href={hompage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n\n            <ul className=\"char__comics-list\">\n\n                {comics.length > 0 ? null : 'no comics =('}\n\n                {\n                    comics.slice(0, 10).map((item, i) => {\n                        return (\n                            <li className=\"char__comics-item\" key={i}>\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.error) {\r\n      return <ErrorMessage />\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\"\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\n\r\nconst MainPage = () => {\r\n\r\n  const [selectedChar, setChar] = useState(null)\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPage;","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n\r\n  const { comicId } = useParams();\r\n  const [comic, setComic] = useState(null);\r\n  const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateComic()\r\n  }, [comicId])\r\n\r\n  const updateComic = () => {\r\n    clearError();\r\n    getComic(comicId)\r\n      .then(onComicLoaded)\r\n  }\r\n\r\n  const onComicLoaded = (comic) => {\r\n    setComic(comic);\r\n  }\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n  return (\r\n    <>\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  )\r\n}\r\n\r\nconst View = ({ comic }) => {\r\n\r\n  const { title, description, pageCount, thumbnail, language, price } = comic;\r\n\r\n  return (\r\n    <div className=\"single-comic\">\r\n      <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{title}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n        <p className=\"single-comic__descr\">{pageCount} </p>\r\n        <p className=\"single-comic__descr\">language: {language}</p>\r\n        <div className=\"single-comic__price\">{price}</div>\r\n      </div>\r\n      <Link to='/comics' className=\"single-comic__back\">Back to all</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleComicPage;","import { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport AppHeader from '../appHeader/AppHeader';\nimport { ComicsPage, MainPage, Page404, SingleComicPage } from '../pages';\n\n\nconst App = () => {\n\n    return (\n        <HashRouter>\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <Switch>\n                        <Route exact path='/'>\n                            <MainPage />\n                        </Route>\n\n                        <Route exact path='/comics'>\n                            <ComicsPage />\n                        </Route>\n\n                        <Route exact path='/comics/:comicId'>\n                            <SingleComicPage />\n                        </Route>\n\n                        <Route exact path='*'>\n                            <Page404 />\n                        </Route>\n                    </Switch>\n                </main>\n            </div>\n        </HashRouter>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App'\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}